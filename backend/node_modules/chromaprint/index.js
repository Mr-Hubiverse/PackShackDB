const spawn = require('child_process').spawn;
const path = require('path');

/**
 * Generate an audio fingerprint from a file
 * @param {string} file - Path to the audio file
 * @returns {Promise<string>} - Returns a promise that resolves with the fingerprint
 */
module.exports = function fingerprint(file) {
  return new Promise((resolve, reject) => {
    try {
      const chromaprint = spawn('fpcalc', [file]);
      let output = '';
      let error = '';

      chromaprint.stdout.on('data', (data) => {
        output += data.toString();
      });

      chromaprint.stderr.on('data', (data) => {
        error += data.toString();
      });

      chromaprint.on('close', (code) => {
        if (code !== 0) {
          reject(new Error(`Chromaprint failed: ${error}`));
          return;
        }

        const lines = output.split('\n');
        const fingerprint = lines.find(line => line.startsWith('FINGERPRINT='))?.split('=')[1];

        if (!fingerprint) {
          reject(new Error('No fingerprint generated'));
          return;
        }

        resolve(fingerprint);
      });

    } catch (err) {
      reject(err);
    }
  });
};