{"ast":null,"code":"var _jsxFileName = \"/app/src/components/DownloadButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Download, Loader2, AlertCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = ({\n  audioFileUrl,\n  fileName = 'audio-file.wav'\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleDownload = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      var _disposition$match$, _disposition$match;\n      const response = await fetch(audioFileUrl);\n      if (!response.ok) {\n        throw new Error(`Download failed: ${response.statusText}`);\n      }\n\n      // Extract filename from the Content-Disposition header or use the default fileName\n      const disposition = response.headers.get('Content-Disposition');\n      const extractedFileName = (_disposition$match$ = disposition === null || disposition === void 0 ? void 0 : (_disposition$match = disposition.match(/filename=\"(.+)\"/)) === null || _disposition$match === void 0 ? void 0 : _disposition$match[1]) !== null && _disposition$match$ !== void 0 ? _disposition$match$ : fileName;\n\n      // Read the file content as a Blob\n      const audioFileData = await response.blob();\n      const url = URL.createObjectURL(audioFileData);\n\n      // Create a temporary anchor element for downloading\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = extractedFileName;\n      document.body.appendChild(link);\n      link.click();\n\n      // Cleanup: remove the link and revoke the object URL\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Error downloading file:', err);\n      setError('Failed to download the audio file. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-block\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex items-center gap-2 text-red-500\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        className: \"h-5 w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      disabled: isLoading,\n      \"aria-busy\": isLoading,\n      \"aria-label\": \"Download audio file\",\n      className: \"flex items-center gap-2 bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-md\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loader2, {\n        className: \"h-5 w-5 animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Download, {\n        className: \"h-5 w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isLoading ? 'Downloading...' : 'Download Audio'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadButton, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["React","useState","Download","Loader2","AlertCircle","jsxDEV","_jsxDEV","DownloadButton","audioFileUrl","fileName","_s","isLoading","setIsLoading","error","setError","handleDownload","_disposition$match$","_disposition$match","response","fetch","ok","Error","statusText","disposition","headers","get","extractedFileName","match","audioFileData","blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","err","console","className","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/app/src/components/DownloadButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Download, Loader2, AlertCircle } from 'lucide-react';\n\nconst DownloadButton = ({ audioFileUrl, fileName = 'audio-file.wav' }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleDownload = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(audioFileUrl);\n\n      if (!response.ok) {\n        throw new Error(`Download failed: ${response.statusText}`);\n      }\n\n      // Extract filename from the Content-Disposition header or use the default fileName\n      const disposition = response.headers.get('Content-Disposition');\n      const extractedFileName =\n        disposition?.match(/filename=\"(.+)\"/)?.[1] ?? fileName;\n\n      // Read the file content as a Blob\n      const audioFileData = await response.blob();\n      const url = URL.createObjectURL(audioFileData);\n\n      // Create a temporary anchor element for downloading\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = extractedFileName;\n      document.body.appendChild(link);\n      link.click();\n\n      // Cleanup: remove the link and revoke the object URL\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Error downloading file:', err);\n      setError('Failed to download the audio file. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"inline-block\">\n      {/* Error Message */}\n      {error && (\n        <div className=\"mb-4 flex items-center gap-2 text-red-500\">\n          <AlertCircle className=\"h-5 w-5\" />\n          <span className=\"text-sm\">{error}</span>\n        </div>\n      )}\n\n      {/* Download Button */}\n      <button\n        onClick={handleDownload}\n        disabled={isLoading}\n        aria-busy={isLoading}\n        aria-label=\"Download audio file\"\n        className=\"flex items-center gap-2 bg-blue-500 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-md\"\n      >\n        {isLoading ? (\n          <Loader2 className=\"h-5 w-5 animate-spin\" />\n        ) : (\n          <Download className=\"h-5 w-5\" />\n        )}\n        <span>{isLoading ? 'Downloading...' : 'Download Audio'}</span>\n      </button>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}