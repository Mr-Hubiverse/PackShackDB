{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./styles/globals.css';// shadcn/ui base styles\nimport'./styles/index.css';// your custom styles\nimport App from'./App';import{register as registerServiceWorker}from'./components/serviceWorker';import ErrorBoundary from'./components/ErrorBoundary';// Environment-specific logging\nimport{jsx as _jsx}from\"react/jsx-runtime\";if(process.env.NODE_ENV==='development'){console.log('Development mode: additional debug logging enabled.');window.addEventListener('error',e=>console.error('Global error:',e));window.addEventListener('unhandledrejection',e=>console.error('Unhandled rejection:',e));}// Conditionally register service worker for production\nif(process.env.NODE_ENV==='production'){registerServiceWorker();}// Create root element for React\nconst root=ReactDOM.createRoot(document.getElementById('root'));// Render the App component inside StrictMode with ErrorBoundary\nroot.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(App,{})})}));","map":{"version":3,"names":["React","ReactDOM","App","register","registerServiceWorker","ErrorBoundary","jsx","_jsx","process","env","NODE_ENV","console","log","window","addEventListener","e","error","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["/mnt/HDD/Docker/PackshackDB/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles/globals.css';  // shadcn/ui base styles\nimport './styles/index.css';    // your custom styles\nimport App from './App';\nimport { register as registerServiceWorker } from './components/serviceWorker';\nimport ErrorBoundary from './components/ErrorBoundary';\n\n// Environment-specific logging\nif (process.env.NODE_ENV === 'development') {\n  console.log('Development mode: additional debug logging enabled.');\n  window.addEventListener('error', e => console.error('Global error:', e));\n  window.addEventListener('unhandledrejection', e => console.error('Unhandled rejection:', e));\n}\n\n// Conditionally register service worker for production\nif (process.env.NODE_ENV === 'production') {\n  registerServiceWorker();\n}\n\n// Create root element for React\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// Render the App component inside StrictMode with ErrorBoundary\nroot.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>\n);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,sBAAsB,CAAG;AAChC,MAAO,oBAAoB,CAAK;AAChC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,QAAQ,GAAI,CAAAC,qBAAqB,KAAQ,4BAA4B,CAC9E,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CAEtD;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1CC,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC,CAClEC,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAEC,CAAC,EAAIJ,OAAO,CAACK,KAAK,CAAC,eAAe,CAAED,CAAC,CAAC,CAAC,CACxEF,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,CAAEC,CAAC,EAAIJ,OAAO,CAACK,KAAK,CAAC,sBAAsB,CAAED,CAAC,CAAC,CAAC,CAC9F,CAEA;AACA,GAAIP,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzCN,qBAAqB,CAAC,CAAC,CACzB,CAEA;AACA,KAAM,CAAAa,IAAI,CAAGhB,QAAQ,CAACiB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjE;AACAH,IAAI,CAACI,MAAM,cACTd,IAAA,CAACP,KAAK,CAACsB,UAAU,EAAAC,QAAA,cACfhB,IAAA,CAACF,aAAa,EAAAkB,QAAA,cACZhB,IAAA,CAACL,GAAG,GAAE,CAAC,CACM,CAAC,CACA,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}