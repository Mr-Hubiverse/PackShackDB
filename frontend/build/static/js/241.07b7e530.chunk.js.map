{"version":3,"file":"static/js/241.07b7e530.chunk.js","mappings":"mLAGA,MA2FA,EA3FuBA,IAAmC,IAAlC,OAAEC,EAAM,iBAAEC,GAAkBF,EAClD,MAAOG,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,GAkEzC,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,UACEC,QAnEiBC,UACrBT,GAAiB,GACjBG,EAAY,GAEZ,IACE,MAAMO,QAAiBC,EAAAA,EAAAA,GAAM,CAC3BC,IAAK,0CAA0Cf,IAC/CgB,OAAQ,MACRC,aAAc,OACdC,iBAAiB,EACjBC,mBAAqBC,IACnB,MAAMC,EAAmBC,KAAKC,MACJ,IAAvBH,EAAcI,OAAgBJ,EAAcK,OAE/CnB,EAAYe,EAAiB,EAE/BK,QAAS,CACP,eAAgB,mBAChB,OAAU,aAKd,GAA2B,qBAAvBb,EAASc,KAAKC,KAA6B,CAC7C,MAAMC,EAAS,IAAIC,WAMnB,OALAD,EAAOE,OAAS,KACd,MAAMC,EAAQC,KAAKC,MAAML,EAAOM,QAChC,MAAM,IAAIC,MAAMJ,EAAMK,SAAW,kBAAkB,OAErDR,EAAOS,WAAWzB,EAASc,KAE7B,CAGA,MAAMY,EAAO,IAAIC,KAAK,CAAC3B,EAASc,MAAO,CACrCC,KAAMf,EAASa,QAAQ,kBAGnBX,EAAM0B,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAOC,SAASC,cAAc,KAG9BC,EAAqBlC,EAASa,QAAQ,uBACtCsB,EAAmBD,EACrBE,mBAAmBF,EAAmBG,MAAM,cAAc,GAAGA,MAAM,KAAK,IACxEjD,GAAoB,WAExB2C,EAAKO,KAAOpC,EACZ6B,EAAKQ,SAAWJ,EAEhBH,SAASQ,KAAKC,YAAYV,GAC1BA,EAAKW,QACLV,SAASQ,KAAKG,YAAYZ,GAC1BH,OAAOC,IAAIe,gBAAgB1C,EAE7B,CAAE,MAAOiB,GACP0B,QAAQ1B,MAAM,kBAAmBA,GACjC2B,MAAM3B,EAAMK,SAAW,qCACzB,CAAC,QACClC,GAAiB,GACjBG,EAAY,EACd,GAOIsD,SAAU1D,EACVM,UAAW,oBAAmBN,EAAgB,cAAgB,IAAKO,SAElEP,EACG,kBAAkBG,KAClB,aAELH,GAAiBG,EAAW,GAAKA,EAAW,MAC3CK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,KAAA,OACEF,UAAU,eACVqD,MAAO,CAAEC,MAAO,GAAGzD,YAIrB,C","sources":["components/DownloadButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst DownloadButton = ({ fileId, originalFilename }) => {\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const handleDownload = async () => {\n    setIsDownloading(true);\n    setProgress(0);\n    \n    try {\n      const response = await axios({\n        url: `http://192.168.50.83:3001/api/download/${fileId}`,\n        method: 'GET',\n        responseType: 'blob',\n        withCredentials: true,\n        onDownloadProgress: (progressEvent) => {\n          const percentCompleted = Math.round(\n            (progressEvent.loaded * 100) / progressEvent.total\n          );\n          setProgress(percentCompleted);\n        },\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'audio/*'\n        }\n      });\n\n      // Handle error responses that might come as JSON\n      if (response.data.type === 'application/json') {\n        const reader = new FileReader();\n        reader.onload = () => {\n          const error = JSON.parse(reader.result);\n          throw new Error(error.message || 'Download failed');\n        };\n        reader.readAsText(response.data);\n        return;\n      }\n\n      // Create blob URL and trigger download\n      const blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      \n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      \n      // Get filename from Content-Disposition header if available\n      const contentDisposition = response.headers['content-disposition'];\n      const downloadFilename = contentDisposition \n        ? decodeURIComponent(contentDisposition.split('filename=\"')[1].split('\"')[0])\n        : originalFilename || 'download';\n\n      link.href = url;\n      link.download = downloadFilename;\n      \n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n    } catch (error) {\n      console.error('Download error:', error);\n      alert(error.message || 'Download failed. Please try again.');\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n\n  return (\n    <div className=\"download-button-container\">\n      <button \n        onClick={handleDownload}\n        disabled={isDownloading}\n        className={`download-button ${isDownloading ? 'downloading' : ''}`}\n      >\n        {isDownloading \n          ? `Downloading... ${progress}%` \n          : 'Download'}\n      </button>\n      {isDownloading && progress > 0 && progress < 100 && (\n        <div className=\"progress-bar-container\">\n          <div \n            className=\"progress-bar\" \n            style={{ width: `${progress}%` }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DownloadButton;"],"names":["_ref","fileId","originalFilename","isDownloading","setIsDownloading","useState","progress","setProgress","_jsxs","className","children","_jsx","onClick","async","response","axios","url","method","responseType","withCredentials","onDownloadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","data","type","reader","FileReader","onload","error","JSON","parse","result","Error","message","readAsText","blob","Blob","window","URL","createObjectURL","link","document","createElement","contentDisposition","downloadFilename","decodeURIComponent","split","href","download","body","appendChild","click","removeChild","revokeObjectURL","console","alert","disabled","style","width"],"sourceRoot":""}